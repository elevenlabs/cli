name: Publish package

on:
  release:
    types: [published]

permissions:
  id-token: write  # Required for OIDC
  contents: read

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Install PNPM
        run: npm i pnpm -g

      - name: Install dependencies
        run: pnpm i

      - name: Build package
        run: pnpm run build

      - name: Determine publish tag
        id: extract
        run: |
          FULL_TAG_NAME=${{ github.event.release.tag_name }}
          if [[ "$FULL_TAG_NAME" == *"beta"* ]]; then
            PUBLISH_TAG="beta"
          else
            PUBLISH_TAG="latest"
          fi
          echo "PUBLISH_TAG=$PUBLISH_TAG" >> $GITHUB_ENV

      - name: Validate tag matches package.json version
        run: |
          TAG_VERSION="${{ github.event.release.tag_name }}"
          # Remove package name prefix if present (e.g., @elevenlabs/agents-cli@0.6.0 -> 0.6.0)
          TAG_VERSION=$(echo "$TAG_VERSION" | sed 's/.*@//')
          PACKAGE_JSON_VERSION=$(node -p "require('./package.json').version")

          echo "Tag version: $TAG_VERSION"
          echo "package.json version: $PACKAGE_JSON_VERSION"

          if [ "$TAG_VERSION" != "$PACKAGE_JSON_VERSION" ]; then
            echo "ERROR: Version mismatch!"
            echo "Git tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_JSON_VERSION)"
            echo "Please ensure the git tag matches the version in package.json"
            exit 1
          fi

          echo "Version check passed: $TAG_VERSION"

      - name: Print publish tag
        run: |
          echo "Publish tag is $PUBLISH_TAG"

      - name: Publish package
        run: pnpm publish --access=public --no-git-checks --tag $PUBLISH_TAG
